//
// Forms
// --------------------------------------------------

// Normalize non-controls
//
// Restyle and baseline non-control form elements.
label {
  display: inline-block;
  margin-bottom: 5px;
}

// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  .tab-focus();
}

// Common form controls
.form-control {
  display: block;
  width: 100%;
  color: @input-color;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: @input-border-width solid @input-border;
  transition: @input-transition;
  .input-base;

  // Placeholder
  &::placeholder {
    color: @input-color-placeholder;
  }

  &:focus,
  &:hover {
    border-color: @input-border-focus;
    outline: 0;
  }

  &[disabled] {
    background-color: @input-bg-disabled;
    color: @input-color-disabled;
    cursor: @cursor-disabled;
  }

  // Reset height for `textarea`
  textarea& {
    resize: none;
    // Set textarea valid value
    min-width: 300px;
    min-height: 76px;
    max-width: 100%;
    max-height: 200px;
  }
}

// Form control sizing
.input-xs {
  .input-xs;
}

.input-lg {
  .input-lg;
}

.input-sm {
  .input-sm;
}

// Form groups
.control-label {
  margin-bottom: @control-label-margin-bottom;
}

// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
  position: relative;
  display: block;

  // These classes are used on elements with <label> descendants
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: @cursor-disabled;
    }
  }

  label {
    line-height: 1.1428571428571428; //  @checkbox-width-height/@font-size-base = 16px/14px
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}

.checkbox label:hover .checkbox-inner::before {
  border-color: @checkbox-checked-border-color;
}

.radio label:hover .radio-inner::before {
  border-color: @radio-checked-border-color;
}

.checkbox.checkbox-disabled label,
.radio.radio-disabled label {
  cursor: not-allowed;
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  top: 0;
  left: 0;
  z-index: @zindex-input;
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;

  &.disabled,
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

// Form control error states
.has-error {
  //.form-control-validation(@state-danger-text; @state-danger-text; @state-danger-bg);

  .help-block.error {
    color: @state-error-text;
    animation-name: shake;
    animation-duration: .5s;
    animation-fill-mode: both;
    animation-timing-function: ease-in-out;
  }
}

// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  display: block; // account for any element using help-block
  color: @help-block-color; // lighten the text some for contrast
  //Sometimes help info is more than one line，so height can't set a fixed value
  min-height: @line-height-computed;
  line-height: @line-height-base;
  font-size: @font-size-base;

  &-tooltip {
    display: inline-block;
    margin-left: @help-block-inline-gap;
  }
}

.form-inline {
  > *,
  > .btn {
    margin-right: @base-unit-px;
    margin-bottom: @base-unit-px;
    vertical-align: middle;
  }
}

//== Form Layout

// Form groups
.form-group {
  .form:not(.form-inline) &:not(:last-child) {
    margin-bottom: @form-group-margin-bottom;
  }

  .form-control {
    width: @form-control-width;
    display: inline-block;
  }

  // Used to provide relation for error message
  .form-control-wrapper {
    position: relative;
  }

  .form-control-message-wrapper {
    position: absolute;
    left: 0;
    bottom: -1px; // Error message width form-control has 1px gap
  }

  // Error
  .error-message {
    position: absolute;
    left: 0;
    top: 0;
    padding: @error-message-padding-vertical @error-message-padding-horizontal;
    background-color: @error-message-background-color;
    border: 1px solid @error-message-border-color;
    border-radius: @border-radius-base;
    filter: ~"drop-shadow(0 0 6px rgba(0,0,0,.1))";
    z-index: @zindex-error-message;
    color: @error-message-font-color;
    display: none;
    white-space: nowrap;

    // Used to provide relation for error message
    &-wrapper {
      position: absolute;
    }

    &-show {
      display: block;
      animation: .3s ease-in-out shake;
    }

    &-arrow {
      &::before,
      &::after {
        content: "";
        position: absolute;
        border-color: transparent;
        border-style: solid;
        border-width: 0 6px 6px;
        left: 10px;
        margin-top: -10px;
        border-bottom-color: @error-message-border-color;
      }

      &::after {
        margin-top: -9px;
        border-bottom-color: @error-message-background-color;
      }
    }
  }
}

// Vertical forms
.form-vertical .form-group {
  .control-label {
    display: block;
  }

  .help-block:not(.help-block-tooltip) {
    padding-top: 4px;
  }

  .form-control-wrapper {
    display: inline-block;
  }
}

// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.form-horizontal {
  .form-group {
    .clearfix;

    .form-control-wrapper,
    .control-label {
      float: left;
    }

    .form-control-wrapper + .help-block {
      clear: both;
    }

    // Help block
    .form-control-wrapper + .help-block:not(.help-block-tooltip) {
      margin-left: @control-label-width + @control-label-margin-right;
    }

    .form-control-wrapper + .help-block.help-block-tooltip {
      padding: @padding-base-vertical 0;
    }

    .control-label {
      display: inline-block;
      //Sometimes help info is more than one line，so height can't set a fixed value
      min-height: @line-height-computed;
      line-height: @line-height-base;
      font-size: @font-size-base;
      padding: @padding-base-vertical 0;
      width: @control-label-width;
      margin-right: @control-label-margin-right;
      text-align: right;
    }

    .btn-toolbar {
      padding-left: @control-label-width + @control-label-margin-right;
    }
  }
}

// Inline
.form-inline .form-group {
  display: inline-block;

  .form-control-wrapper {
    display: inline-block;
    margin-left: @form-control-margin-left;
  }

  // Form control wrapper behind Screen only dom no need margin left.
  .sr-only + .form-control-wrapper {
    margin-left: 0;
  }
}

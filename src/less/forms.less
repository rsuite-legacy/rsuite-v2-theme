//
// Forms
// --------------------------------------------------

// Normalize non-controls
//
// Restyle and baseline non-control form elements.
label {
  display: inline-block;
  margin-bottom: 5px;
}

// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  .tab-focus();
}

// Common form controls
.form-control {
  display: block;
  width: 100%;
  color: @input-color;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: @input-border-width solid @input-border;
  transition: @input-transition;
  .input-base;

  // Placeholder
  &::placeholder {
    color: @input-color-placeholder;
  }

  &:focus,
  &:hover {
    border-color: @input-border-focus;
    outline: 0;
  }

  &[disabled] {
    background-color: @input-bg-disabled;
    color: @input-color-disabled;
    cursor: @cursor-disabled;
  }

  // Reset height for `textarea`
  textarea& {
    resize: none;
    // Set textarea valid value
    min-width: 300px;
    min-height: 76px;
    max-width: 100%;
    max-height: 200px;
  }
}

// Form control sizing
.input-xs {
  .input-xs;
}

.input-lg {
  .input-lg;
}

.input-sm {
  .input-sm;
}

// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: @form-group-margin-bottom;
}

// Form groups
.control-label {
  margin-bottom: @control-label-margin-bottom;
}

// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
  position: relative;
  display: block;

  // These classes are used on elements with <label> descendants
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: @cursor-disabled;
    }
  }

  label {
    line-height: 1.1428571428571428; //  @checkbox-width-height/@font-size-base = 16px/14px
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}

.checkbox label:hover .checkbox-inner::before {
  border-color: @checkbox-checked-border-color;
}

.radio label:hover .radio-inner::before {
  border-color: @radio-checked-border-color;
}

.checkbox.checkbox-disabled label,
.radio.radio-disabled label {
  cursor: not-allowed;
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  top: 0;
  left: 0;
  z-index: @zindex-input;
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;

  &.disabled,
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

// Form control error states
.has-error {
  //.form-control-validation(@state-danger-text; @state-danger-text; @state-danger-bg);

  .help-block.error {
    color: @state-error-text;
    animation-name: shake;
    animation-duration: .5s;
    animation-fill-mode: both;
    animation-timing-function: ease-in-out;
  }
}

// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  display: block; // account for any element using help-block
  margin: 5px 0;
  color: @help-block-color; // lighten the text some for contrast
  //Sometimes help info is more than one lineï¼Œso height can't set a fixed value
  min-height: 16.8px;
  line-height: 16.8px;

  &-tooltip {
    display: inline-block;
    margin-left: @help-block-inline-gap;
  }
}

.form-inline {
  > *,
  > .btn {
    margin-right: @base-unit-px;
    margin-bottom: @base-unit-px;
  }
}

// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.form-horizontal {
  // Consistent vertical alignment of radios and checkboxes
  //
  // Labels also get some reset styles, but that is scoped to a media query below.
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: (@padding-base-vertical + 1); // Default padding plus a border
  }
  // Account for padding we're adding to ensure the alignment and of help text
  // and other content below items
  .radio,
  .checkbox {
    min-height: (@line-height-computed + (@padding-base-vertical + 1));
  }
}

// Form Layout
.form {
  .form-control {
    width: @form-control-width;
    display: inline-block;
  }

  // Used to provide relation for error message
  .form-group {
    position: relative;
  }
}

// Error
.error-message {
  position: absolute;
  left: -1px;
  bottom: -1*(@error-message-height + 3px);
  padding: @error-message-padding-vertical @error-message-padding-horizontal;
  background-color: @error-message-background-color;
  border: 1px solid @error-message-border-color;
  border-radius: @border-radius-base;
  filter: ~"drop-shadow(0 0 6px rgba(0,0,0,.1))";
  z-index: @zindex-error-message;
  color: @error-message-font-color;
  display: none;

  &-show {
    display: block;
    animation: .5s linear shake;
  }

  &::before,
  &::after {
    content: "";
    position: absolute;
    border-color: transparent;
    border-style: solid;
    border-width: 0 6px 6px;
    left: 10px;
    margin-top: -10px;
    border-bottom-color: @error-message-border-color;
  }

  &::after {
    margin-top: -9px;
    border-bottom-color: @error-message-background-color;
  }
}
